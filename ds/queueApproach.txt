
Queue in Data Structures

A queue is a linear data structure that follows the FIFO (First In, First Out) principle. This means that the element added first is the first one to be removed, similar to a real-life queue (like a line at a ticket counter).

---


Queue Syntax in Java

Java provides a built-in `Queue` interface in the `java.util` package, which is implemented by classes like `LinkedList` and `PriorityQueue`.


Basic Syntax:
java
import java.util.*;

public class QueueExample {
    public static void main(String[] args) {
        Queue<Integer> queue = new LinkedList<>(); // Creating a queue
        
        queue.add(10); // Enqueue (Insertion)
        queue.add(20);
        queue.add(30);
        
        System.out.println("Queue: " + queue);
        
        System.out.println("Front element: " + queue.peek()); // Peek (Front element)
        
        queue.remove(); // Dequeue (Deletion)
        System.out.println("After Dequeue: " + queue);
    }
}


---

Explanation of Syntax
1. Queue<Integer> queue = new LinkedList<>(); – Creates a queue using `LinkedList`.
2. queue.add(10); – Adds elements to the queue.
3. queue.peek(); – Returns the front element without removing it.
4. queue.remove(); – Removes the front element from the queue.
5. rinting the queu – Shows the elements in FIFO order.

---

Output of the Above Code

Queue: [10, 20, 30]
Front element: 10
After Dequeue: [20, 30]


Using Java’s built-in `Queue` makes implementation simple and efficient!

